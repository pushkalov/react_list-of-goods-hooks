{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","Goods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorederedGoods","className","type","classNames","onClick","value","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAqBMC,EAhDD,SACLC,EACAH,EACAH,GAEA,IAAMO,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EA0BOS,CACZnB,EACAM,EACAH,GAGF,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYhB,IAAaP,EAASe,WAGxCS,QApCc,WACpBhB,EAAYR,EAASe,WA2BjB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAaP,EAASiB,SAEtCO,QArCY,WAClBhB,EAAYR,EAASiB,SA8BjB,4BAWA,wBACEK,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAA2B,IAAfnB,IAGlBoB,QAxDc,WACpBnB,GAAW,SAAAoB,GAAK,OACbA,MA8CC,sBAYElB,IAAaP,EAASM,MAAQF,IAC9B,wBACEkB,KAAK,SACLD,UACEE,IACE,mBACA,CAAE,WAAYhB,IAAaP,EAASM,OAGxCkB,QA3DS,WACjBhB,EAAYR,EAASM,MACrBD,GAAW,IAiDL,sBAeJ,6BACE,6BACGI,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCvInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9c25ec63.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorederedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const clickAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const clickReversed = () => {\n    setReverse(value => (\n      !value\n    ));\n  };\n\n  const clickLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const clickReset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const Goods = getReorederedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )\n          }\n          onClick={clickAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={clickLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-warning',\n              { 'is-light': isReversed === false },\n            )\n          }\n          onClick={clickReversed}\n        >\n          Reverse\n        </button>\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-danger',\n                { 'is-light': sortType !== SortType.NONE },\n              )\n            }\n            onClick={clickReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {Goods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}